/* Global ====================== */
/*root é a raiz do html*/
:root { 
  --bg-header: #7158e2;
  --color-strings: #7d5fff;
  --bg-main: #f1f2f6;
  --color-cardstable: #ffffff;
  --default-green: #49aa26;
  --light-green: #3dd705;
  --red: #e92929;

  --new-transaction: #7d5fff;
  --new-hover: #8854d0;
}

* {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
}

html {
  font-size: 93.75%; /* 15px tamanho de font padrão para o mobile*/
}

body {
  background: var(--bg-main);
  font-family: 'Poppins', sans-serif;
}

.container {
  width: min(90vw, 800px); /* min calcula qual é o menor valor e aplica o próprio*/
  margin: auto; /*joga a diferença para o outro lado, centralizando o elemento nas larguras*/
}

/* trick para esconder elementos, mas deixando os leitores de tela enxergarem*/
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* Titles ====================== */
h2 {
  margin: 3.2rem 0 0.8rem;
  color: var(--color-strings);

  font-weight: normal; /* 400 */
}

/* Links & Buttons ==============*/
a {
  color: var(--new-transaction);
  text-decoration: none;
  font-size: 1.4rem;
}

a:hover {
  color: var(--new-hover);
  transition: 500ms;
} 

button {
  width: 100%;
  height: 50px;

  border: none;
  color: #ffffff;
  background: var(--default-green);
  border-radius: 0.25rem;
  cursor: pointer;
}

button:hover {
 background: var(--light-green);
 transition: 1s;
}

.button.new {
  display: inline-block;
  margin-bottom: 0.8rem
}

.button.cancel {
  height: 50px;

  border: 1.5px solid var(--red);
  border-radius: 0.25rem;
  color: var(--red);

  display: flex;
  align-items: center;
  justify-content: center; 
}

.button.cancel:hover {
  background: var(--red);
  color: #ffffff;
}

/* Header ====================== */

header {
  background: var(--bg-header);
  padding: 2rem 0.5rem 10rem 0;
  text-align: center;
}

header div.contentHeader {
  display: inline-block;
}

input[type="checkbox"] {
  height: 0;
  width: 0;
  visibility: hidden;
}

label {
  cursor: pointer;
  text-indent: -9999px;
  width: 60px;
  height: 30px;
  background-color: gray;
  float: right;
  border-radius: 100px;
  position: relative;
}

label::after {
  content: '';
  position: absolute;
  top: 2.5px;
  left: 3px;
  width: 24px;
  height: 24px;
  background-color: white;
  border-radius: 50%;
  transition: 0.3s;
}

input:checked + label { 
  background-color: var(--default-green);
}

input:checked + label::after {
  left: calc(100% - 5px);
  transform: translateX(-100%);
}

/* Balance ====================== */

section#balance {
  margin-top: -6.5rem;
}

section#balance h2 {
  margin-top: 0;
}

/* Cards ====================== */

.card {
  background: var(--color-cardstable);
  padding: 1.5rem 2rem;
  border-radius: 0.25rem;
  margin-bottom: 2rem;
  color: var(--color-strings);
}

div.card h3 {
  font-weight: normal;
  font-size: 1rem;

  display: flex;
  align-items: center;
  justify-content: space-between;
}

div.card p {
  font-size: 2rem;
  line-height: 3rem;
  margin-top: 1rem;
}

div.card.total {
  background: var(--default-green);
  color: #ffffff;
}

/* Table ====================== */
#transaction {
  display: block; /* encaixou na lagura de 100%*/
  width: 100%;
  
  overflow-x: auto; /*quando foi necessário cria um scroll no eixo x da tabela*/
}

table#data-table {
  width: 100%; /* pega 100% do espaço da caixa onde a table está dentro*/
  border-spacing: 0 0.25rem; /* controla os espaçamentos entre os elementos da tabela p=eixo vertical s=eixo horizontal*/
  color: var(--color-strings);
}

table thead tr th:first-child,
table tbody tr td:first-child{
  border-radius: 0.25rem 0 0 0.25rem;
}

table thead tr th:last-child,
table tbody tr td:last-child {
  border-radius: 0 0.25rem 0.25rem 0;
}

table tbody tr {
  opacity: 0.7;
}

table tbody tr:hover {
  opacity: 1;
}

table#data-table thead th {
  background: var(--color-cardstable);
  font-weight: normal;
  padding: 1rem 2rem;
  text-align: left;
}

table#data-table tbody td {
  background: var(--color-cardstable);
  padding: 1rem 2rem;
  font-weight: normal;
}

td.income {
  color: var(--light-green);
}
 
td.expense {
  color: #e92929;
}

/* Modal ====================== */
.modal-overlay {
  width: 100%;
  height: 100%;
  
  background-color: rgb(0,0,0, 0.7);

  position: fixed;
  top: 0; /* cobre a pagina inteira*/
  z-index: 1;

  display: flex;
  align-items: center;
  justify-content: center;

  opacity: 0; /* desaparece na tela, mas ainda continua ocupando espaço*/
  visibility: hidden; /* esconde o espaço do elemento */
}

.modal-overlay.active {
  opacity: 1;
  visibility: visible;
}

.modal {
  background: var(--bg-main);
  padding: 2.4rem;
  position: relative;
  
  width: 90%;
  max-width: 500px;
  border-radius: 0.25rem;
}

/* Form ====================== */
#form {
  max-width: 500px;
}

#form h2 {
  margin-top: 0;
  color: var(--new-transaction)
}

div.input-group {
  margin-top: 0.8rem;
}

#form form input {
  border: none;
  border-radius: 0.25rem;
  outline: none;
  padding: 0.8rem;

  width: 100%;
}

.input-group small {
  display: inline-block;
  color: var(--color-strings);
  margin-top: 0.5rem;
}

.input-group.actions {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.input-group .button,
.input-group button {
  width: 48%;
  font-size: 1.2rem;
}

/* Footer ====================== */
footer {
  text-align: center;
  padding: 4rem 0 2rem;
  color: var(--color-strings);
  font-size: 1.2rem;
  opacity: 0.6;
}

/* Responsive ====================== */
@media (min-width: 800px) {
  html {
    font-size: 87.5%; /* 14px */
  }

  section#balance {
    display: grid;
    /*grid-template-columns: define quantas colunas o grid vai ter fr = fração, mas pode usar qualquer propriedade de medida*/
    grid-template-columns: 1fr 1fr 1fr; 
    gap: 2rem; /* espaços entre as colunas*/
  }
}